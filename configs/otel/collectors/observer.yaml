# Phoenix v3 Ultimate Process-Metrics Stack - Observer OTel Collector Configuration
# Simplified version for demo

receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otelcol-main-metrics'
          scrape_interval: 15s
          static_configs:
            - targets: ['otelcol-main:8888']
          relabel_configs:
            - source_labels: []
              target_label: phoenix_pipeline_label
              replacement: "full_fidelity"
        - job_name: 'otelcol-main-optimized'
          scrape_interval: 15s
          static_configs:
            - targets: ['otelcol-main:8889']
          relabel_configs:
            - source_labels: []
              target_label: phoenix_pipeline_label
              replacement: "optimised"
        - job_name: 'otelcol-main-experimental'
          scrape_interval: 15s
          static_configs:
            - targets: ['otelcol-main:8890']
          relabel_configs:
            - source_labels: []
              target_label: phoenix_pipeline_label
              replacement: "experimental"

processors:
  batch:
    send_batch_size: 1024
    timeout: 5s

  resourcedetection:
    detectors: [system, env]

  transform:
    metric_statements:
      - context: metric
        statements:
          - set(name, "phoenix_pipeline_output_cardinality_estimate") where name matches "phoenix_.*_output_ts_active"

exporters:
  prometheus:
    endpoint: "0.0.0.0:9888"
    namespace: "phoenix_observer_kpi_store"
    resource_to_telemetry_conversion:
      enabled: true
    send_timestamps: true

  logging:
    verbosity: basic

extensions:
  health_check:
    endpoint: "0.0.0.0:13134"
  pprof:
    endpoint: "0.0.0.0:1778"
  zpages:
    endpoint: "0.0.0.0:55680"
  memory_ballast:
    size_mib: ${OTEL_OBSERVER_MEMBALLAST_MIB_ENV:-64}

service:
  extensions: [health_check, pprof, zpages, memory_ballast]
  telemetry:
    metrics:
      address: ":9887"
      level: detailed
    logs:
      level: info

  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [resourcedetection, transform, batch]
      exporters: [prometheus, logging]